{
  "name": "vscode-terramform-cloud",
  "displayName": "vscode-terramform-cloud",
  "description": "VSCode Extension for interacting with Terraform Cloud",
  "repository": "https://github.com/glennsarti/vscode-terraform-cloud",
  "author": {
    "name": "Glenn Sarti"
  },
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.63.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:vscode-terramform-cloud.helloWorld",
    "onCommand:terraform-cloud.login",
    "onCommand:terraform-cloud.logout",
    "onCommand:terraform-cloud.relogin",
    "onView:tfcWorkspaces",
    "onAuthenticationRequest:TerraformCloudAccessToken",
    "onStartupFinished"
  ],
  "main": "./out/node/extension.js",
  "browser": "./out/browser/extension.js",
  "contributes": {
    "taskDefinitions": [
      {
        "type": "terraform-cloud",
        "required": []
      }
    ],
    "commands": [
      {
        "command": "terraform-cloud.login",
        "category": "Terraform Cloud",
        "title": "Terraform Cloud: Login"
      },
      {
        "command": "terraform-cloud.logout",
        "category": "Terraform Cloud",
        "title": "Terraform Cloud: Logout"
      },
      {
        "command": "terraform-cloud.relogin",
        "category": "Terraform Cloud",
        "title": "Terraform Cloud: Relogin"
      },
      {
        "command": "terraform-cloud.workspaces.refreshEntry",
        "icon": "$(refresh)",
        "enablement": "view == tfcWorkspaces",
        "title": "Refresh"
      },
      {
        "command": "terraform-cloud.workspaces.watchEntry",
        "icon": "$(eye)",
        "enablement": "view == tfcWorkspaces",
        "title": "Watch Workspace"
      },
      {
        "command": "terraform-cloud.workspaces.openInTfc",
        "icon": "$(cloud)",
        "enablement": "view == tfcWorkspaces",
        "title": "Open in Terraform Cloud"
      },
      {
        "command": "terraform-cloud.workspaces.viewDetails",
        "icon": "$(note)",
        "enablement": "view == tfcWorkspaces",
        "title": "View Workspace details"
      },
      {
        "command": "terraform-cloud.runs.openInTfc",
        "icon": "$(cloud)",
        "enablement": "view == tfcWorkspaceRuns",
        "title": "Open in Terraform Cloud"
      },
      {
        "command": "terraform-cloud.runs.viewDetails",
        "icon": "$(note)",
        "enablement": "view == tfcWorkspaceRuns",
        "title": "View Run details"
      },
      {
        "command": "terraform-cloud.runs.filter",
        "icon": "$(filter)",
        "enablement": "view == tfcWorkspaceRuns",
        "title": "Filter Runs"
      },
      {
        "command": "terraform-cloud.selectOrganization",
        "icon": "$(cloud)",
        "category": "Terraform Cloud",
        "title": "Terraform Cloud: Select Organization"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "terraform-cloud.workspaces.refreshEntry",
          "when": "view == tfcWorkspaces",
          "group": "navigation"
        },
        {
          "command": "terraform-cloud.runs.filter",
          "when": "view == tfcWorkspaceRuns",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "terraform-cloud.workspaces.refreshEntry",
          "when": "view == tfcWorkspaces && viewItem == workspace",
          "group": "inline"
        },
        {
          "command": "terraform-cloud.workspaces.openInTfc",
          "when": "view == tfcWorkspaces && viewItem == workspace",
          "group": "inline"
        },
        {
          "command": "terraform-cloud.workspaces.watchEntry",
          "when": "view == tfcWorkspaces && viewItem == workspace",
          "group": "inline"
        },
        {
          "command": "terraform-cloud.workspaces.viewDetails",
          "when": "view == tfcWorkspaces && viewItem == workspace",
          "group": "inline"
        },
        {
          "command": "terraform-cloud.runs.openInTfc",
          "when": "view == tfcWorkspaceRuns && viewItem == run",
          "group": "inline"
        },
        {
          "command": "terraform-cloud.runs.viewDetails",
          "when": "view == tfcWorkspaceRuns && viewItem == run",
          "group": "inline"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "tfcWorkspaces",
        "contents": "No organization selected.\n[Select an Organization](command:terraform-cloud.selectOrganization)"
      },
      {
        "view": "tfcWorkspaceRuns",
        "contents": "No workspace selected"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "terraform-cloud-toolbar",
          "title": "Terraform Cloud",
          "icon": "media/terraform-svgrepo-com.svg"
        }
      ]
    },
    "views": {
      "terraform-cloud-toolbar": [
        {
          "id": "tfcWorkspaces",
          "name": "Workspaces",
          "contextualTitle": "Workspaces"
        },
        {
          "visibility": "collapsed",
          "id": "tfcWorkspaceRuns",
          "name": "Runs",
          "contextualTitle": "Runs"
        }
      ]
    },
    "configuration": {
      "title": "Terraform Cloud",
      "properties": {
        "terraformCloud.apiUrl": {
          "type": "string",
          "default": "https://app.terraform.io",
          "scope": "window",
          "description": "The URL of the Terraform Cloud API endpoints."
        },
        "terraformCloud.organization": {
          "type": "string",
          "scope": "window",
          "description": "The initial organization to use when querying Terraform Cloud."
        },
        "terraformCloud.workspace": {
          "type": "string",
          "scope": "window",
          "markdownDescription": "The name of the initial workspace to use when querying Terraform Cloud. Only applies when `#terraformCloud.organization#` is set"
        },
        "terraformCloud.watchWorkspaceOnStartup": {
          "type": "boolean",
          "scope": "window",
          "markdownDescription": "Enable or Disable automatically watching the initial workspace. Only applies when `#terraformCloud.workspace#` is set"
        },
        "terraformCloud.detectWorkspaceOnStartup": {
          "type": "boolean",
          "scope": "window",
          "markdownDescription": "Enable or Disable detecting the workspace via Git. Only applies when `#terraformCloud.organization#` is set"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "vscode:package": "vsce package",
    "lint": "eslint src --ext ts",
    "pretest": "npm run compile && npm run lint",
    "compile": "webpack --config webpack.node.config.js --config webpack.web.config.js",
    "compile:node": "webpack --config webpack.node.config.js",
    "compile:web": "webpack --config webpack.web.config.js",
    "watch": "webpack --watch --config webpack.node.config.js --config webpack.web.config.js",
    "watch:node": "webpack --watch --config webpack.node.config.js",
    "watch:web": "webpack --watch --config webpack.web.config.js",
    "package": "webpack --mode production --devtool hidden-source-map --config webpack.web.config.js --config webpack.node.config.js",
    "test": "node ./out/test/runTest.js",
    "test-web": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. --extensionTestsPath=dist/web/test/suite/index.js",
    "run-in-browser": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. .",
    "openapi:download": "node tools/get-openapi.js",
    "openapi:clean": "node tools/clean-dir.js src/common/tfcApi",
    "openapi:build": "node tools/build-openapi.js",
    "openapi:build:node": "openapi -i vendor/openapi-terraform-cloud.yaml --client axios --indent 2 --name TfcClient",
    "openapi:build:web": "openapi -i vendor/openapi-terraform-cloud.yaml --client fetch --indent 2 --name TfcClient",
    "vendor": "npm run openapi:download && npm run openapi:clean && npm run openapi:build"
  },
  "dependencies": {
  },
  "devDependencies": {
    "@apidevtools/swagger-cli": "^4.0.4",
    "@types/glob": "^7.1.4",
    "@types/mocha": "^9.0.0",
    "@types/node": "14.x",
    "@types/vscode": "^1.63.0",
    "@typescript-eslint/eslint-plugin": "^5.1.0",
    "@typescript-eslint/parser": "^5.1.0",
    "@vscode/test-electron": "^1.6.2",
    "@vscode/test-web": "^0.0.22",
    "eslint": "^8.1.0",
    "glob": "^7.1.7",
    "mocha": "^9.1.3",
    "openapi-typescript-codegen": "^0.23.0",
    "path-browserify": "^1.0.1",
    "process": "^0.11.10",
    "ts-loader": "^9.2.6",
    "typescript": "^4.4.4",
    "util": "^0.12.4",
    "webpack-cli": "^4.9.2",
    "webpack": "^5.70.0",
    "vsce": "^2.9.3",

    "axios": "^0.27.2",
    "form-data": "^4.0.0"
  }
}
